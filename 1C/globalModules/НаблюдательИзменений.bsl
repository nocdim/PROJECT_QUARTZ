Функция ПолучитьРазрешениеНаСборДанных(Значение) Экспорт

	НеобходимаяИнфо = Новый Структура;
	
	// определяем, является ли объект внешней обработкой 
	УказательВнешнейОбработки = СтрРазделить(Значение.Метаданные().ПолноеИмя(), ".");
	НеобходимаяИнфо.Вставить("ЭтоВнешняяОбработка", (ВРег(УказательВнешнейОбработки[0]) = "ВНЕШНЯЯОБРАБОТКА"));

	// получаем имя компьютера
	ТекНомерСеанса = НомерСеансаИнформационнойБазы();
	Сеансы = ПолучитьСеансыИнформационнойБазы();
	Для каждого Сеанс Из Сеансы Цикл
		Если Сеанс.НомерСеанса = ТекНомерСеанса Тогда
			НеобходимаяИнфо.Вставить("ИмяКомпьютера", Сеанс.ИмяКомпьютера);
			Прервать;
		КонецЕсли; 	
	КонецЦикла; 
	
	Если НеобходимаяИнфо.ЭтоВнешняяОбработка 
		И НеобходимаяИнфо.ИмяКомпьютера = "SWS034" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
КонецФункции // ()

// Основная функция запуска наблюдения
Процедура ЗапуститьПроцессНаблюдения() Экспорт

	ЗапуститьWebСервер();
	СоздатьВременныйJSONФайл();

КонецПроцедуры
 

Процедура ЗапуститьWebСервер()

	//WebСерверЗапущен = ПроверитьСостояниеWebСервера();
	WebСерверЗапущен = Истина; //затычка
	
	Если WebСерверЗапущен Тогда
		Возврат;
	Иначе
		// открываем батник для запуска сервера
	КонецЕсли; 

КонецПроцедуры

Функция ПроверитьСостояниеWebСервера()

	// делаем запрос к web-серверу
	// запускаем батник для проверки работы web-сервера

КонецФункции // ()

Процедура СоздатьВременныйJSONФайл()

	// создаем JSON по предопределенному адресу (корень диска C)	

КонецПроцедуры

Процедура НачатьЗаписьВJSON(СтруктураСостоянийОбъекта) Экспорт

		

КонецПроцедуры

Функция ЗаполнитьСостояниеОбъекта(ИзмОб, СтруктураСостоянийОбъекта, Режим) Экспорт

	
	
	Если Режим = 1 Тогда
		
		ССО_ДО = ЗаполнитьСО(ИзмОб);
		СтруктураСостоянийОбъекта.Вставить("OLD", ССО_ДО);
		Возврат СтруктураСостоянийОбъекта;
		
	ИначеЕсли Режим = 2 Тогда
		
		ССО_ДО_ПОСЛЕ = ЗаполнитьСО(ИзмОб);
		СтруктураСостоянийОбъекта.Вставить("NEW", ССО_ДО_ПОСЛЕ);
		Возврат СтруктураСостоянийОбъекта;
		
	ИначеЕсли Режим = 3 Тогда
		ССО_ИЗМЕНЕНИЯ = Новый Структура;
		// отбираем различия
		РеквизитыДо = СтруктураСостоянийОбъекта.OLD;
		РеквизитыПосле = СтруктураСостоянийОбъекта.NEW;
		РезультатСравнения = СравнитьСтруктуры(РеквизитыДо, РеквизитыПосле);
		Если РезультатСравнения.Количество() = 0 Тогда
			ССО_ИЗМЕНЕНИЯ.Вставить("Object", Строка(ИзмОб.Ссылка));
			ССО_ИЗМЕНЕНИЯ.Вставить("Changes", NULL);
			Возврат ССО_ИЗМЕНЕНИЯ;
		Иначе
			ССО_ИЗМЕНЕНИЯ.Вставить("Object", Строка(ИзмОб.Ссылка));
			ССО_ИЗМЕНЕНИЯ.Вставить("Changes", РезультатСравнения);
			Возврат ССО_ИЗМЕНЕНИЯ;
		КонецЕсли
		
	Иначе
		
		Сообщить("Ошибка. Неизвестный режим записи изменений объекта. Режим " + Строка(Режим));
	
	КонецЕсли; 	

КонецФункции // ()

Функция ЗаполнитьСО(ИзмОб)
	
	// 1 пункт
	СтруктураРеквизитов = Новый Структура;
	Для каждого Реквизит Из ИзмОб.Метаданные().Реквизиты Цикл
	
		СтруктураРеквизитов.Вставить(Реквизит.Имя, ИзмОб[Реквизит.Имя]);	
	
	КонецЦикла; 
	
	Возврат СтруктураРеквизитов;

КонецФункции // ()

Функция СравнитьСтруктуры(СтруктураДо, СтруктураПосле)
	
	Результат = Новый Структура;
	
	Для каждого текПоле Из СтруктураДо Цикл
	
		ЗначениеСравнения = ?(СтруктураПосле.Свойство(текПоле.Ключ), СтруктураПосле[текПоле.Ключ], Неопределено);

		Если (текПоле.Значение <> ЗначениеСравнения) ИЛИ (ЗначениеСравнения = Неопределено) Тогда
		
			Результат.Вставить(текПоле.Ключ, ЗначениеСравнения);	
		
		КонецЕсли; 
	
	КонецЦикла; 
	
	Возврат Результат;

КонецФункции // ()
 
 
  
 
 
 
 
 
 