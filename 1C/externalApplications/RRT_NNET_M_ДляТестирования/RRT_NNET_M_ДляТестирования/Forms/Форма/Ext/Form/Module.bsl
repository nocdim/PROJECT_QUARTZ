// переменная хранит булево на разрешение наблюдения
Перем НаблюдениеРазрешено;
Перем МассивСостоянийОбъектов;

&НаСервере
Процедура Выполнить_ТНаСервере(ДанныеФормы)
	// 3 пункт
	МассивСостоянийОбъектов = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер", ДанныеФормы.Партнер);
	Запрос.УстановитьПараметр("Организация", ДанныеФормы.Организация);
	Запрос.УстановитьПараметр("Соглашение", ДанныеФормы.Соглашение);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	               |	ПриобретениеТоваровУслуг.Дата КАК Дата,
	               |	ПриобретениеТоваровУслуг.Проведен КАК Проведен
	               |ИЗ
	               |	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	               |ГДЕ
	               |	ПриобретениеТоваровУслуг.Проведен
	               |	И ПриобретениеТоваровУслуг.Партнер = &Партнер
	               |	И ПриобретениеТоваровУслуг.Организация = &Организация
	               |	И ПриобретениеТоваровУслуг.Соглашение = &Соглашение";
	
	// объекты подвергающиеся изменениям
	ТЗ = Запрос.Выполнить().Выгрузить();
	// я думаю, лучшее решение = это после получения объекта и перед записью/проводкой
	// "обернуть" участок кода, где в начале записывается первичное состояние, затем измененное
	// также, если мы работаем с циклом, необходимо на стороне внешней обработки создать "хранилище"
	// массив, в который будут записываться изменяемые объекты 
	Для каждого СтрокаТЗ Из ТЗ Цикл
		// 2 пункт - для каждого объекта создаем структуру для записи состояний до и после
		СтруктураСостоянийОбъекта = Новый Структура;
		
		ДокОбъект = СтрокаТЗ.Ссылка.ПолучитьОбъект();
		//ОБОРАЧИВАЕМ В "РАМКИ ГЛОБАЛЬНОГО МОДУЛЯ RRT_NNET_M_НаблюдательИзменений"
		// НАЧАЛО 123123
		ССО_ДО = RRT_NNET_M_НаблюдательИзменений.ЗаполнитьСостояниеОбъекта(ДокОбъект, СтруктураСостоянийОбъекта, 1);
		
		ДокОбъект.РегистрироватьЦеныПоставщика = Истина;
		Для каждого СтрокаТЧ Из ДокОбъект.Товары Цикл
		
			СтрокаТЧ.ВидЦеныПоставщика = ДанныеФормы.Соглашение.ВидЦеныПоставщика;	
		
		КонецЦикла;
		
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		ССО_ДО_ПОСЛЕ = RRT_NNET_M_НаблюдательИзменений.ЗаполнитьСостояниеОбъекта(ДокОбъект, СтруктураСостоянийОбъекта, 2);
		// записываем только изменения
		ССО_ИЗМЕНЕНИЯ = RRT_NNET_M_НаблюдательИзменений.ЗаполнитьСостояниеОбъекта(ДокОбъект, СтруктураСостоянийОбъекта, 3);
		// КОНЕЦ 123123
		
		Сообщить("Документ " + Строка(ДокОбъект.Ссылка) + " был успешно проведен!");
		
		// записываем структуру состояний в массив ВСЕГО
		МассивСостоянийОбъектов.Добавить(ССО_ИЗМЕНЕНИЯ);
	
	КонецЦикла; 
	
	RRT_NNET_M_НаблюдательИзменений.ЗаписатьВоВременныйJSONФайл(МассивСостоянийОбъектов);
	
КонецПроцедуры

&НаКлиенте
Процедура Выполнить_Т(Команда)
	ДанныеФормы = Новый Структура;
	ДанныеФормы.Вставить("Партнер", Объект.Партнер);
	ДанныеФормы.Вставить("Организация", Объект.Организация);
	ДанныеФормы.Вставить("Соглашение", Объект.Соглашение);
	Попытка
	
		Выполнить_ТНаСервере(ДанныеФормы);	
	
	Исключение
		
		Сообщить("error! " + ОписаниеОшибки());
		
	КонецПопытки; 
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НеобходимыеДанныеСтроки = Новый Структура;
	НеобходимыеДанныеСтроки.Вставить("Партнер", Объект.Партнер);
	НеобходимыеДанныеСтроки.Вставить("Организация", Объект.Организация);
	Форма = ОткрытьФорму("Справочник.СоглашенияСПоставщиками.ФормаВыбора",,Элемент,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партнер");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Партнер;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора = Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = НеобходимыеДанныеСтроки.Организация;
	ЭлементОтбора.Использование = Истина;
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ЗначениеОбъекта = РеквизитФормыВЗначение("Объект");
	НаблюдениеРазрешено = RRT_NNET_M_НаблюдательИзменений.ПолучитьРазрешениеНаСборДанных(ЗначениеОбъекта);
	Если НаблюдениеРазрешено Тогда
		
		RRT_NNET_M_НаблюдательИзменений.ЗапуститьПроцессНаблюдения();
	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры
